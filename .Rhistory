table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample (c(0,1), 100, prob = c(0.3, 0.7))
flips <- sample (c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm (10, mean = 100, sd = 25)
?rpois()
rpois(5, mean = 10)
rpois(5, lambda = 10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMean(my_pois)
cm <- colMeans(my_pois)
hist(cm)
1
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass()
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POXIXt(Sys.time())
t2 <- as.POXIXlt(Sys.time())
t2 <- as.POXIXlt(Sys.time(t1))
t2 <- as.POSIXlt(Sys.time(t1))
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekday()
weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.tim() - t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot()
?plot
plot( x= cars$speed, y = cars$dist)
plot( x= cars$speed, y= cars$dist)
plot( y= cars$speed, x= cars$dist)
plot( y= cars$speed, x= cars$dist , xlab = "Speed")
plot(  x= cars$dist, y= cars$speed, xlab = "Speed")
plot(  x= tcars$speed, y= cars$dis, xlab = "Speed")
plot(  x= cars$speed, y= cars$dist, xlab = "Speed")
plot(  x= cars$speed, y= cars$dist, xlab = "Speed", ylab= "Stopping Distance")
plot(  x= cars$speed, y= cars$dist, ylab= "Stopping Distance")
plot(  x= cars$speed, y= cars$dist, xlab= "Speed", ylab= "Stopping Distance")
plot(  x= cars$speed, y= cars$dist, xlab= "Speed", ylab= "Stopping Distance", main = "My Plot")
plot(  x= cars$speed, y= cars$dist, main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
Plot (cars, col = 2)
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
set.seed(1)
rpois(5,2)
getmean <- function(mean) m <- mean
getmean(c(1,2,3))
m
source("test")
source("test.R")
makeVector
makeVector()
$getmean()
x$getmean()
vec <- makeVector(x)
vec
vec$getmean()
x <- 1:3
makeVector(x)
?mean
setmean <- function(mean) m <- mean
setmean
setmean(1)
x <- setmean(1)
x
x <- setmean(c(1,2,3))
x
setmean <- function(mean) m <<- mean
x <- setmean(c(1,2,3))
x
function(mean)
{}
?function
?function()
function()
library()
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "56b637a5baffac62cad9")
myapp <- oauth_app("b3b53d941752e0e69cfe", "f4a1e0ecdbb3e6a68f0ff9501cdf59bf4be05077")
myapp <- oauth_app("github", key="b3b53d941752e0e69cfe", secret="f4a1e0ecdbb3e6a68f0ff9501cdf59bf4be05077")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
homeTL= GET("https://api.github.com/users/jtleek/repos")
homeTL
library(jsonlite)
install.packages("jsonlite")
library(jsonlite)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key="b3b53d941752e0e69cfe", secret="2f7d9cd5be9ee548da019bbe265d49e4561ffea0")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(jsonlite)
myjson <- toJSON(content(req))
mydf <- fromJSON(myjson)
mydf
head(mydf)
mydf(createtime)
summary(mydf)
mydf
mydf$created_at
head(mydf, n=1)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode = readLines(con)
close(con)
htmlcode
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
library(swirl)
swirl
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
?boxplot
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd="4")
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
plot(latitude, pm25)
plot(pollution, latitude, pm25)
plot(pollution, latitude, pm25)
plot(pollution, latitude, pm25)
?plot
plot(pollution$latitude, pollution$pm25)
with(pollution, plot(latitude, pm25))
ablin(h=12, lwd=2, lty=2)
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="Eest")
plot(east$latitude, east$pm25, main="East")
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red", main="Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind~Ozone))
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
par()
length(par())
names(par)
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, airquality$Ozone, set=n)
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in MYC")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Month=="May")
may <- subset(airquality, Month==5)
plot(May$Wind, May$Ozone, )
plot(may$Wind, may$Ozone, )
plot(may$Wind,may$Ozone,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, !Month==5)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="blue",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legand(topright, pch=c(17,8), col=c("blue","red"), )
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar, main= "Ozone and Solar Radiation")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(irquality$Temp, airquality$Ozone, main="Ozone and Temperature")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer= TRUE)
?read.table
?fread
??fread
install.packages("data.table")
library(data.table)
?fread
library(swirl)
swirl()
library(nlme)
library(lattice)
install.packages("lattice")
library(nlme)
library(lattice)
xyplot(weight~time|Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight~time|Diet, BodyWeight)
xyplot( weight ~ time| Diet, BodyWeight)
xyplot( weight ~ Time| Diet, BodyWeight)
summary(Diet)
BodyWeight
?panel.abline()
library(lattice)
library(datasets)
data(airquality)
p<- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(ggplot2)
qplot(votes, rating, data = movies)
p <- qplot(votes, rating, data = movies)
p + smooth ="loess"
p + geom_smooth()
p + stats_smooth("loess")
p + panel = panel.loess
p <- qplot(votes, rating, data = movies, panel = panel.loess)
p
p <- qplot(votes, rating, data = movies, smooth = "loess")
p
p <- qplot(votes, rating, data = movies, stats_smooth("loess"))
p
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = .~ Month)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col="red", pch=8)
xyplot(Ozone~Wind, data = airquality, col="red", pch=8, main="big Apple Date")
xyplot(Ozone~Wind, data = airquality,pch=8, col="red", main="big Apple Date")
xyplot(Ozone~Wind, data = airquality,pch=8, col="red", main="Big Apple Date")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big
| Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind|as.factor(Month), data = airquality, layout= c(5,1))
xyplot(Ozone ~ Wind|Month, data = airquality, layout= c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
[[p]]
p[["names"]]
p[["call"]]
library(swirl)
swirl()
quit
quit()
---
setwd("~/Desktop/RepData_PeerAssessment1")
Df <-read.csv("activity.csv")
l_na <- is.na(Df$steps)
try <- Df[l_na, ]
head(try)
dim(try)
Df[DF$steps == NA, DF$interval==0]
Df[Df$steps == NA, Df$interval==0]
Df[Df$steps == NA|Df$interval==0, ]
try2 <- Df[Df$steps == NA|Df$interval==0, ]
head(try2)
try2 <- Df[Df$steps == NA|Df$interval==0, ]
try2 <- Df[Df$interval==0, ]
head(try2)
na_value <- tapply(Df$steps, Df$interval, function(x) {x[is.na(x)] <- mean(x)})
head(na_value)
na_value <- tapply(Df$steps, Df$interval, function(x) {x[is.na(x)] <- mean(x, na.rm=TRUE)})
head(na_value)
Df[Df$steps==NA|Df$steps==0]
Df[Df$steps]
Df[is.na(Df$steps0]
Df[is.na(Df$steps)]
Df[is.na(Df$steps)] <-1
?mutant
mutate
?mutate
setwd("~/Desktop/RepData_PeerAssessment1")
Df <-read.csv("activity.csv")
l_na <- is.na(Df$steps)
try1 <- Df$steps[is.na(Df$steps)|Df$interval== 0]
head(try1)
Df$steps[is.na(Df$steps)|Df$interval== 0] <- 1
head(Df)
Df$steps[is.na(Df$steps)|Df$interval== "0"] <- 2
head(Df)
na_value <- tapply(Df$steps, Df$interval, function(x) {x[is.na(x)] <- mean(x)})
na_value[2]
na_value <- as.data.frame(tapply(Df$steps, Df$interval, function(x) {x[is.na(x)] <- mean(x)}))
class(na_value)
dime(na_value)
dim(na_value)
head(na_value)
setwd("~/Desktop/RepData_PeerAssessment1")
Df <-read.csv("activity.csv")
Df$steps[is.na(Df$steps)] <- tapply(Df$steps, Df$interval, mean, na.rm = TRUE)
head(Df)
steps_sum <- tapply(Df$steps, Df$date, sum, na.rm=TRUE)
hist(steps_sum, breaks=50, xlab="total number of steps", main="Histogram showing the total number of steps per day(with NA replaced)")
step_median_new <- tapply(Df$steps, Df$date, median, na.rm=TRUE)
hist(steps_median_new, breaks=50, xlab="total number of steps", main="Histogram showing the median of steps per day(with NA replaced)")
hist(step_median_new, breaks=50, xlab="total number of steps", main="Histogram showing the median of steps per day(with NA replaced)")
is.weekday
library(lubridate)
library("lubridate")
install.packages("lubridate")
library("lubridate")
Df$WD <- wday(Df$date)
head(Df)
if (Df$WD == "1"|Df$WD == "7") {Df$WD <- "weekend"} else {Df$WD <- "weekday"}
if (Df$WD == "1") {Df$WD <- "weekend"}
else if (Df$WD == "7") {Df$WD <- "weekend"}
else {Df$WD <- "weekday"}
if (Df$WD == 1) {Df$WD <- "weekend"}
else if (Df$WD == 7) {Df$WD <- "weekend"}
else {Df$WD <- "weekday"}
install.packages("timeDate")
?isWeekday
library("timeDate")
?isWeekday
Df$WD[Df$WD == 1 | Df$WD == 7] <- "weekend"
head(Df, n = 20)
setwd("~/Desktop/RepData_PeerAssessment1")
Df <-read.csv("activity.csv")
Df[,2] <- as.Date(Df$date, "%Y-%m-%d")
library("lubridate")
Df$WD <- wday(Df$date)
head(Df)
if (Df$WD == 1) {Df$WD <- "weekend"}
head(Df)
if (Df$WD == 1) {Df$WD <- "weekend"}
else if (Df$WD == "7") {Df$WD <- "weekend"}
else {Df$WD <- "weekday"}
head(Df)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
Df$WD[!Df$WD==1|!Df$WD == 7] <-"weekday"
head(Df)
summary(Df)
str(Df)
Df$WD <- as.factor(Df$WD)
?plot
library(ggplot2)
with(Df, qplot(date, steps))
with(Df, qplot(date, steps, facets=.~ WD))
with(Df, qplot(date, steps, facets=.~WD))
qplot(date, steps, facets=.~WD)
qplot(date, steps, data=Df, facets=.~WD)
try <- Df[Df$WD=="weekend"]
head(try)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
setwd("~/Desktop/RepData_PeerAssessment1")
Df <-read.csv("activity.csv")
Df[,2] <- as.Date(Df$date, "%Y-%m-%d")
Df$steps[is.na(Df$steps)] <- tapply(Df$steps, Df$interval, mean, na.rm = TRUE)
library("lubridate")
Df$WD <- wday(Df$date)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
try <- Df[Df$WD=="weekend",]
head(try)
Df$WD[!Df$WD==1|!Df$WD == 7] <-"weekday"
str(Df)
library(ggplot2)
qplot(date, steps, data=Df, facets=.~WD)
try
qplot(date, steps, data=Df, facets=.~WD, geom="line")
qplot(date, steps, data=Df, facets=.~as.factor(WD), geom="line")
Wday <- Df[Df$Wd=="weekday", ]
qplot(date, steps, data=Wday, geom="line")
head(Wday)
Df
Wday <- Df[Df$WD=="weekday", ]
qplot(date, steps, data=Wday, geom="line")
WEnd <- Df[Df$WD=="weekend", ]
qplot(date, steps, data=WEnd, geom="line")
WEnd
Df$WD
unique(Df$WD)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
unique(Df$Wd)
unique(Df$WD)
Df$WD <- wday(Df$date)
head(Df)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
unique(Df$WD)
Df$WD[!Df$WD==1|!Df$WD == 7] <-"weekday"
unique(Df$WD)
Df$WD <- wday(Df$date)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
unique(Df$Wd)
unique(Df$WD)
Df$WD[Df$WD== c(2,3,4,5,6)] <-"weekday"
Df$WD[Df$WD== 2, 3,4,5,6] <-"weekday"
Df$WD[Df$WD== 2 | 3|4|5|6] <-"weekday"
unique(Df$WD)
Df$WD <- wday(Df$date)
Df$WD[Df$WD==1|Df$WD==7] <-"weekend"
unique(Df$WD)
Df$WD[Df$WD== 2] <-"weekday"
unique(Df$WD)
Df$WD[Df$WD== 2|Df$WD== 3] <-"weekday"
unique(Df$WD)
Df$WD[Df$WD== 2|Df$WD== 3|Df$WD== 4|Df$WD== 5|Df$WD== 6] <-"weekday"
unique(Df$WD)
qplot(date, steps, data=Wday, geom="line", facets=.~WD)
Wday <- Df[Df$WD=="weekday", ]
qplot(date, steps, data=Wday, geom="line")
WEnd <- Df[Df$WD=="weekend", ]
qplot(date, steps, data=WEnd, geom="line")
qplot(date, steps, data=Df, geom="line", facets=.~WD)
qplot(date, steps, data=Df, geom="line", facets=WD~.)
library("ggplot2")
